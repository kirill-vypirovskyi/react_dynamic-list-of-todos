{"version":3,"sources":["components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","api.ts","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["TodoInfo","todo","activeId","setActiveId","completed","id","title","className","classNames","type","onClick","TodoList","todos","map","TodoFilter","query","onSelectChange","onQueryChange","onChange","event","target","value","placeholder","style","pointerEvents","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","getUser","userId","Loader","TodoModal","onClose","useState","user","setUser","isLoaded","setLoaded","hasError","setError","useEffect","getUserFromServer","a","newUser","href","email","name","App","setTodos","activeTodo","setActiveTodo","sortType","setSortType","setQuery","getTodosFromServer","newTodos","handleActiveTodo","useCallback","newActiveTodo","find","visibleTodos","useMemo","filterType","categoryFiltered","filter","toLowerCase","includes","getVisibleTodos","length","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d3354736.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport { FC } from 'react';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todo: Todo;\n  activeId?: number;\n  setActiveId: (id:number) => void;\n};\n\nexport const TodoInfo: FC<Props> = ({\n  todo,\n  activeId,\n  setActiveId,\n}) => {\n  const {\n    completed,\n    id,\n    title,\n  } = todo;\n\n  return (\n    <tr\n      data-cy=\"todo\"\n      className={classNames(\n        { 'has-background-info-light': id === activeId },\n      )}\n      key={id}\n    >\n      <td className=\"is-vcentered\">{id}</td>\n      <td className=\"is-vcentered\">\n        {completed && (\n          <span className=\"icon\" data-cy=\"iconCompleted\">\n            <i className=\"fas fa-check\" />\n          </span>\n        )}\n      </td>\n      <td className=\"is-vcentered is-expanded\">\n        <p\n          className={classNames(\n            'has-text-success',\n            { 'has-text-danger': !completed },\n          )}\n        >\n          {title}\n        </p>\n      </td>\n      <td className=\"has-text-right is-vcentered\">\n        <button\n          data-cy=\"selectButton\"\n          className=\"button\"\n          type=\"button\"\n          onClick={() => setActiveId(id)}\n        >\n          <span className=\"icon\">\n            <i className={classNames(\n              'far fa-eye',\n              { 'fa-eye-slash': id === activeId },\n            )}\n            />\n          </span>\n        </button>\n      </td>\n    </tr>\n  );\n};\n","import { FC } from 'react';\nimport { Todo } from '../../types/Todo';\nimport { TodoInfo } from '../TodoInfo';\n\ntype Props = {\n  todos: Todo[];\n  activeId?: number;\n  setActiveId: (id: number) => void;\n};\n\nexport const TodoList: FC<Props> = ({\n  todos,\n  activeId,\n  setActiveId,\n}) => {\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {todos.map(todo => (\n          <TodoInfo\n            key={todo.id}\n            todo={todo}\n            activeId={activeId}\n            setActiveId={setActiveId}\n          />\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import { FC } from 'react';\n\ntype Props = {\n  query: string;\n  onSelectChange: (value: string) => void;\n  onQueryChange: (value: string) => void;\n};\n\nexport const TodoFilter: FC<Props> = ({\n  query,\n  onSelectChange,\n  onQueryChange,\n}) => (\n  <form className=\"field has-addons\">\n    <p className=\"control\">\n      <span className=\"select\">\n        <select\n          data-cy=\"statusSelect\"\n          onChange={(event) => onSelectChange(event.target.value)}\n        >\n          <option value=\"all\">All</option>\n          <option value=\"active\">Active</option>\n          <option value=\"completed\">Completed</option>\n        </select>\n      </span>\n    </p>\n\n    <p className=\"control is-expanded has-icons-left has-icons-right\">\n      <input\n        data-cy=\"searchInput\"\n        type=\"text\"\n        className=\"input\"\n        placeholder=\"Search...\"\n        value={query}\n        onChange={(event) => onQueryChange(event.target.value)}\n      />\n      <span className=\"icon is-left\">\n        <i className=\"fas fa-magnifying-glass\" />\n      </span>\n\n      {query && (\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n          <button\n            data-cy=\"clearSearchButton\"\n            type=\"button\"\n            className=\"delete\"\n            onClick={() => onQueryChange('')}\n          />\n        </span>\n      )}\n    </p>\n  </form>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promime\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see now the loader works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { FC, useEffect, useState } from 'react';\nimport { getUser } from '../../api';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\nimport { Loader } from '../Loader';\n\ntype Props = {\n  todo: Todo;\n  onClose: () => void;\n};\n\nexport const TodoModal: FC<Props> = ({ todo, onClose }) => {\n  const {\n    id,\n    completed,\n    title,\n    userId,\n  } = todo;\n\n  const [user, setUser] = useState<User>();\n  const [isLoaded, setLoaded] = useState(false);\n  const [hasError, setError] = useState(false);\n\n  useEffect(() => {\n    setLoaded(false);\n    setError(false);\n\n    const getUserFromServer = async () => {\n      try {\n        const newUser = await getUser(userId);\n\n        setUser(newUser);\n      } catch {\n        setError(true);\n      } finally {\n        setLoaded(true);\n      }\n    };\n\n    getUserFromServer();\n  }, []);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!isLoaded && (\n        <Loader />\n      )}\n\n      {hasError && (\n        <div className=\"notification is-danger\">\n          <button\n            type=\"button\"\n            className=\"delete\"\n            aria-label=\"close modal window\"\n            onClick={onClose}\n          />\n\n          Something went wrong! Unable to load user. Try again.\n        </div>\n      )}\n\n      {user && (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${id}`}\n            </div>\n\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              aria-label=\"close modal window\"\n              onClick={onClose}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {completed\n                ? <strong className=\"has-text-success\">Done</strong>\n                : <strong className=\"has-text-danger\">Planned</strong>}\n\n              {' by '}\n\n              <a href={`mailto:${user.email}`}>\n                {user.name}\n              </a>\n\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","import {\n  FC,\n  useCallback,\n  useEffect,\n  useMemo,\n  useState,\n} from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { Todo } from './types/Todo';\nimport { getTodos } from './api';\n\nconst getVisibleTodos = (\n  todos: Todo[],\n  filterType: string,\n  query: string,\n): Todo[] => {\n  let categoryFiltered = todos;\n\n  if (filterType === 'active') {\n    categoryFiltered = todos.filter(todo => !todo.completed);\n  }\n\n  if (filterType === 'completed') {\n    categoryFiltered = todos.filter(todo => todo.completed);\n  }\n\n  return categoryFiltered.filter(todo => (\n    todo.title.toLowerCase().includes(query.toLowerCase())\n  ));\n};\n\nexport const App: FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [activeTodo, setActiveTodo] = useState<Todo | null>(null);\n  const [sortType, setSortType] = useState('all');\n  const [query, setQuery] = useState('');\n  const [hasError, setError] = useState(false);\n  const [isLoaded, setLoaded] = useState(false);\n\n  useEffect(() => {\n    const getTodosFromServer = async () => {\n      try {\n        const newTodos = await getTodos();\n\n        setTodos(newTodos);\n      } catch {\n        setError(true);\n      } finally {\n        setLoaded(true);\n      }\n    };\n\n    getTodosFromServer();\n  }, []);\n\n  const handleActiveTodo = useCallback((id: number): void => {\n    const newActiveTodo = todos.find(todo => todo.id === id);\n\n    setActiveTodo(newActiveTodo || null);\n  }, [todos]);\n\n  const visibleTodos = useMemo(() => {\n    return getVisibleTodos(todos, sortType, query);\n  }, [todos, sortType, query]);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                query={query}\n                onSelectChange={setSortType}\n                onQueryChange={setQuery}\n              />\n            </div>\n\n            <div className=\"block\">\n              {!isLoaded && (\n                <Loader />\n              )}\n\n              {todos.length > 0 && (\n                <TodoList\n                  todos={visibleTodos}\n                  activeId={activeTodo?.id}\n                  setActiveId={handleActiveTodo}\n                />\n              )}\n            </div>\n\n            {hasError && (\n              <div className=\"notification is-danger\">\n                Something went wrong! Impossible to load todos.\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n\n      {activeTodo && (\n        <TodoModal todo={activeTodo} onClose={() => handleActiveTodo(0)} />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}