{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","api.ts","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["TodoList","todos","activeId","setActiveId","className","map","todo","completed","id","title","type","onClick","classNames","TodoFilter","query","onSelectChange","onQueryChange","onChange","event","target","value","placeholder","style","pointerEvents","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","Loader","TodoModal","onClose","userId","useState","user","setUser","useEffect","getUser","foundUser","href","email","name","App","setTodos","activeTodo","setActiveTodo","sortType","setSortType","setQuery","result","handleActiveTodo","newActiveTodo","find","visibleTodos","categoryFiltered","filter","toLowerCase","includes","setVisibleTodos","length","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.319f603c.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport { FC } from 'react';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[];\n  activeId: number;\n  setActiveId: (id: number) => void;\n};\n\nexport const TodoList: FC<Props> = ({\n  todos,\n  activeId,\n  setActiveId,\n}) => {\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {todos.map(todo => {\n          const {\n            completed,\n            id,\n            title,\n          } = todo;\n\n          return (\n            <tr\n              data-cy=\"todo\"\n              className={id === activeId\n                ? 'has-background-info-light'\n                : ''}\n              key={id}\n            >\n              <td className=\"is-vcentered\">{id}</td>\n              <td className=\"is-vcentered\">\n                {completed && (\n                  <span className=\"icon\" data-cy=\"iconCompleted\">\n                    <i className=\"fas fa-check\" />\n                  </span>\n                )}\n              </td>\n              <td className=\"is-vcentered is-expanded\">\n                <p\n                  className={completed\n                    ? 'has-text-success'\n                    : 'has-text-danger'}\n                >\n                  {title}\n                </p>\n              </td>\n              <td className=\"has-text-right is-vcentered\">\n                <button\n                  data-cy=\"selectButton\"\n                  className=\"button\"\n                  type=\"button\"\n                  onClick={() => setActiveId(id)}\n                >\n                  <span className=\"icon\">\n                    <i className={classNames(\n                      'far',\n                      { 'fa-eye-slash': id === activeId },\n                      { 'fa-eye': id !== activeId },\n                    )}\n                    />\n                  </span>\n                </button>\n              </td>\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n};\n","import { FC } from 'react';\n\ntype Props = {\n  query: string;\n  onSelectChange: (value: string) => void;\n  onQueryChange: (value: string) => void;\n};\n\nexport const TodoFilter: FC<Props> = ({\n  query,\n  onSelectChange,\n  onQueryChange,\n}) => (\n  <form className=\"field has-addons\">\n    <p className=\"control\">\n      <span className=\"select\">\n        <select\n          data-cy=\"statusSelect\"\n          onChange={(event) => onSelectChange(event.target.value)}\n        >\n          <option value=\"all\">All</option>\n          <option value=\"active\">Active</option>\n          <option value=\"completed\">Completed</option>\n        </select>\n      </span>\n    </p>\n\n    <p className=\"control is-expanded has-icons-left has-icons-right\">\n      <input\n        data-cy=\"searchInput\"\n        type=\"text\"\n        className=\"input\"\n        placeholder=\"Search...\"\n        value={query}\n        onChange={(event) => onQueryChange(event.target.value)}\n      />\n      <span className=\"icon is-left\">\n        <i className=\"fas fa-magnifying-glass\" />\n      </span>\n\n      {query && (\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n          <button\n            data-cy=\"clearSearchButton\"\n            type=\"button\"\n            className=\"delete\"\n            onClick={() => onQueryChange('')}\n          />\n        </span>\n      )}\n    </p>\n  </form>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promime\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see now the loader works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { FC, useEffect, useState } from 'react';\nimport { getUser } from '../../api';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\nimport { Loader } from '../Loader';\n\ntype Props = {\n  todo: Todo;\n  onClose: () => void;\n};\n\nexport const TodoModal: FC<Props> = ({ todo, onClose }) => {\n  const {\n    id,\n    completed,\n    title,\n    userId,\n  } = todo;\n\n  const [user, setUser] = useState<User>();\n\n  useEffect(() => {\n    getUser(userId)\n      .then(foundUser => setUser(foundUser));\n  }, []);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!user ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={onClose}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {completed\n                ? <strong className=\"has-text-success\">Done</strong>\n                : <strong className=\"has-text-danger\">Planned</strong>}\n\n              {' by '}\n\n              <a href={`mailto:${user.email}`}>\n                {user.name}\n              </a>\n\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","import { FC, useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { Todo } from './types/Todo';\nimport { getTodos } from './api';\n\nconst setVisibleTodos = (\n  todos: Todo[],\n  sortType: string,\n  query: string,\n): Todo[] => {\n  let categoryFiltered = todos;\n\n  if (sortType === 'active') {\n    categoryFiltered = todos.filter(todo => !todo.completed);\n  }\n\n  if (sortType === 'completed') {\n    categoryFiltered = todos.filter(todo => todo.completed);\n  }\n\n  return categoryFiltered.filter(todo => (\n    todo.title.toLowerCase().includes(query.toLowerCase())\n  ));\n};\n\nexport const App: FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [activeTodo, setActiveTodo] = useState<Todo>();\n  const [sortType, setSortType] = useState('all');\n  const [query, setQuery] = useState('');\n\n  useEffect(() => {\n    getTodos()\n      .then(result => setTodos(result));\n  }, []);\n\n  const handleActiveTodo = (id: number): void => {\n    const newActiveTodo = todos.find(todo => todo.id === id);\n\n    setActiveTodo(newActiveTodo);\n  };\n\n  const visibleTodos = setVisibleTodos(todos, sortType, query);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                query={query}\n                onSelectChange={setSortType}\n                onQueryChange={setQuery}\n              />\n            </div>\n\n            <div className=\"block\">\n              {todos.length > 0\n                ? (\n                  <TodoList\n                    todos={visibleTodos}\n                    activeId={activeTodo?.id || 0}\n                    setActiveId={handleActiveTodo}\n                  />\n                )\n                : <Loader />}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {activeTodo && (\n        <TodoModal todo={activeTodo} onClose={() => handleActiveTodo(0)} />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}